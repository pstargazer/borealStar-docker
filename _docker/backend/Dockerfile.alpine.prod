ARG PHPVERSION=8.1

FROM alpine:3.19
FROM php:${PHPVERSION}-fpm-alpine AS php-fpm
FROM composer:latest AS composer

ENV USERNAME process
ENV USERGROUP proccess

ENV CMD_PATH /app
ENV ENTRY_PREFIX /srv
# ENV CMD_PATH /var/www/html/


# prerequesite for php extentions 
RUN apk add libpq-dev  

# configure php and ext/
ADD _docker/backend/conf/php/php.ini-development /usr/local/etc/php/php.ini-development
RUN docker-php-ext-configure pdo_pgsql
RUN docker-php-ext-install pdo_pgsql

# crond is part of the openrc
RUN apk add openrc \
            busybox \
            # cap \
            --no-cache 

# RUN mkdir /etc/crontab/
# ADD ./_docker/backend/periodic/ /var/spool/cron/crontabs
ADD --chown=${USERNAME}:${USERGROUP} ./_docker/backend/periodic/ /etc/crontabs/ 

RUN chmod -R 777 /var/log

# set proccess user
# RUN addgroup -g 2000 ${USERGROUP} \
    # && adduser -u 2000 -G ${USERGROUP} -s /bin/sh -D ${USERNAME}

FROM nginx:alpine AS nginx


RUN adduser -u 2000 -G users -s /bin/sh -D ${USERNAME}



# copy conf files in etc root
ADD --chmod=555 ./_docker/backend/conf/etc/ /etc/

# copy code
WORKDIR ${CMD_PATH}
ADD --chown=${USERNAME}:${USERGROUP} --chmod=775 ./backend/ .


RUN su -c "chmod -R 777 ${CMD_PATH}"
RUN su -c "chown -R 2000:users ${CMD_PATH}/*"

ADD --chown=${USERNAME}:users --chmod=775 _docker/backend/entrypoint.sh ${ENTRY_PREFIX}/

USER ${USERNAME}
CMD ["/sbin/init"]
ENTRYPOINT /bin/bash $ENTRY_PREFIX/entrypoint.sh
